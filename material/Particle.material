vertex_program exhaust_shader/vs glsl 
{
    source ExhaustMaterialVp.glsl 

    default_params
    {
        param_named_auto world_mat world_matrix
        param_named_auto view_mat view_matrix
		param_named_auto normal_mat inverse_transpose_world_matrix
		param_named_auto up_vec view_up_vector
		param_named timer float 0.0
        //param_named_auto projection_mat projection_matrix
    }
}


geometry_program exhaust_shader/gs glsl 
{
    source ExhaustMaterialGp.glsl
	input_operation_type point_list
	output_operation_type triangle_strip
	uses_adjacency_information false
	max_output_vertices 4

    default_params
    {
        param_named_auto projection_mat projection_matrix
		param_named particle_size float 0.08;
    }
}


fragment_program exhaust_shader/fs glsl 
{
    source ExhaustMaterialFp.glsl 

	default_params
	{
		param_named object_colour float3 1.0 1.0 1.0
		param_named tex_samp int 0
	}
}

vertex_program particle_shader2/vs glsl 
{
    source ParticleMaterial2Vp.glsl 

    default_params
    {
        param_named_auto world_mat world_matrix
        param_named_auto view_mat view_matrix
		param_named_auto normal_mat inverse_transpose_world_matrix
		param_named_auto up_vec view_up_vector
		param_named timer float 0.0
		param_named object_colour float3 0.8 0.0 0.0
        //param_named_auto projection_mat projection_matrix
    }
}

fragment_program particle_shader2/fs glsl 
{
    source ParticleMaterial2Fp.glsl 

	default_params
	{
	}
}

vertex_program particle_shader3/vs glsl 
{
    source ParticleMaterial3Vp.glsl 

    default_params
    {
        param_named_auto world_mat world_matrix
        param_named_auto view_mat view_matrix
		param_named_auto normal_mat inverse_transpose_world_matrix
		param_named_auto up_vec view_up_vector
		param_named timer float 0.0
        //param_named_auto projection_mat projection_matrix
    }
}

vertex_program particle_shader4/vs glsl 
{
    source ParticleMaterial4Vp.glsl

    default_params
    {
        param_named_auto world_mat world_matrix
        param_named_auto view_mat view_matrix
		param_named_auto normal_mat inverse_transpose_world_matrix
		param_named_auto up_vec view_up_vector
		param_named timer float 0.0
        //param_named_auto projection_mat projection_matrix
    }
}

geometry_program particle_shader3/gs glsl 
{
    source ExhaustMaterialGp.glsl
	input_operation_type point_list
	output_operation_type triangle_strip
	uses_adjacency_information false
	max_output_vertices 4

    default_params
    {
        param_named_auto projection_mat projection_matrix
		param_named particle_size float 0.08;
    }
}

fragment_program particle_shader3/fs glsl 
{
    source ParticleMaterial3Fp.glsl 

	default_params
	{
		param_named object_colour float3 0.8 0.4 0.03
		param_named tex_samp int 0
	}
}

geometry_program particle_shader/gs glsl 
{
    source ParticleMaterial2Gp.glsl
	input_operation_type point_list
	output_operation_type triangle_strip
	uses_adjacency_information false
	max_output_vertices 4

    default_params
    {
        param_named_auto projection_mat projection_matrix
		param_named particle_size float 0.007;
    }
}

vertex_program points_shader/vs glsl 
{
    source PointsMaterialVp.glsl 

    default_params
    {
        param_named_auto world_mat world_matrix
        param_named_auto view_mat view_matrix
    }
}


geometry_program points_shader/gs glsl 
{
    source PointsMaterialGp.glsl
	input_operation_type point_list
	output_operation_type triangle_strip
	uses_adjacency_information false
	max_output_vertices 4

    default_params
    {
        param_named_auto projection_mat projection_matrix
		param_named point_size float 0.2
    }
}


fragment_program points_shader/fs glsl 
{
    source PointsMaterialFp.glsl 

	default_params
	{
		param_named point_colour float4 1.0 0.0 0.0 1.0
	}
}

vertex_program spline_shader/vs glsl 
{
    source SplineMaterialVp.glsl 

    default_params
    {
        param_named_auto world_mat world_matrix
        param_named_auto view_mat view_matrix
		param_named_auto up_vec view_up_vector
		param_named timer float 0.0
    }
}

geometry_program spline_shader/gs glsl 
{
    source SplineMaterialGp.glsl
	input_operation_type point_list
	output_operation_type triangle_strip
	uses_adjacency_information false
	max_output_vertices 4

    default_params
    {
        param_named_auto projection_mat projection_matrix
		param_named particle_size float 0.08
    }
}

fragment_program spline_shader/fs glsl 
{
    source SplineMaterialFp.glsl 

	default_params
	{
		param_named particle_colour float4 0.1 0.4 0.7 1.0
	}
}

vertex_program h_shader/vs glsl 
{
    source FireMaterialVp.glsl 

    default_params
    {
        param_named_auto world_mat world_matrix
        param_named_auto view_mat view_matrix
		param_named_auto normal_mat inverse_transpose_world_matrix
		param_named_auto up_vec view_up_vector
		param_named timer float 0.0
        //param_named_auto projection_mat projection_matrix
    }
}


geometry_program h_shader/gs glsl 
{
    source FireMaterialGp.glsl
	input_operation_type point_list
	output_operation_type triangle_strip
	uses_adjacency_information false
	max_output_vertices 4

    default_params
    {
        param_named_auto projection_mat projection_matrix
		param_named particle_size float 0.08;
    }
}


fragment_program h_shader/fs glsl 
{
    source FireMaterialFp.glsl 

	default_params
	{
		param_named object_colour float3 0.8 0.4 0.03
		param_named tex_samp int 0
	}
}

fragment_program hg_shader/fs glsl 
{
    source FireMaterialFp.glsl 

	default_params
	{
		param_named object_colour float3 0.1 0.8 0.1
		param_named tex_samp int 0
	}
}

fragment_program hb_shader/fs glsl 
{
    source FireMaterialFp.glsl 

	default_params
	{
		param_named object_colour float3 0.1 0.1 0.8
		param_named tex_samp int 0
	}
}


material SplineParticleMaterial
{
    technique
    {
        pass
        {
			separate_scene_blend src_alpha one src_alpha one_minus_src_alpha
			separate_scene_blend_op add max
			depth_write off
									
            vertex_program_ref spline_shader/vs
            {
            }
			
			geometry_program_ref spline_shader/gs
            {
            }

            fragment_program_ref spline_shader/fs
            {
            }

			texture_unit {
			    texture exhaust.png 2d
		    }
        } 
    }
}

material PointsMaterial
{
    technique
    {
        pass
        {
			separate_scene_blend src_alpha one src_alpha one_minus_src_alpha
			separate_scene_blend_op add max
			depth_write off
									
            vertex_program_ref points_shader/vs
            {
            }
			
			geometry_program_ref points_shader/gs
            {
            }

            fragment_program_ref points_shader/fs
            {
            }
        } 
    }
}

material ExhaustMaterial
{
    technique
    {
        pass
        {
			// Blending settings
		    separate_scene_blend src_alpha one src_alpha one_minus_src_alpha
			separate_scene_blend_op add max
			depth_write off

            vertex_program_ref exhaust_shader/vs
            {
            }
			
			geometry_program_ref exhaust_shader/gs
            {
            }

            fragment_program_ref exhaust_shader/fs
            {
            }

			texture_unit {
				texture_alias tex_samp
			    texture exhaust.png 2d
		    }
        } 
    }
}

material BloodMaterial
{
    technique
    {
        pass
        {
            vertex_program_ref particle_shader2/vs
            {
            }
			geometry_program_ref particle_shader/gs
            {
            }
            fragment_program_ref particle_shader2/fs
            {
            }
        } 
    }
}

material HysteriaGreenMaterial
{
    technique
    {
        pass
        {
            // Blending settings
		    separate_scene_blend src_alpha one src_alpha one_minus_src_alpha
			separate_scene_blend_op add max
			depth_write off

            vertex_program_ref h_shader/vs
            {
            }
			geometry_program_ref h_shader/gs
            {
            }
            fragment_program_ref hg_shader/fs
            {
            }

			texture_unit {
				texture_alias tex_samp
			    texture exhaust2.png 2d
		    }
        } 
    }
}

material HysteriaBlueMaterial
{
    technique
    {
        pass
        {
            // Blending settings
		    separate_scene_blend src_alpha one src_alpha one_minus_src_alpha
			separate_scene_blend_op add max
			depth_write off

            vertex_program_ref h_shader/vs
            {
            }
			geometry_program_ref h_shader/gs
            {
            }
            fragment_program_ref hb_shader/fs
            {
            }

			texture_unit {
				texture_alias tex_samp
			    texture exhaust2.png 2d
		    }
        } 
    }
}

material HysteriaMaterial
{
    technique
    {
        pass
        {
            // Blending settings
		    separate_scene_blend src_alpha one src_alpha one_minus_src_alpha
			separate_scene_blend_op add max
			depth_write off

            vertex_program_ref h_shader/vs
            {
            }
			geometry_program_ref h_shader/gs
            {
            }
            fragment_program_ref h_shader/fs
            {
            }

			texture_unit {
				texture_alias tex_samp
			    texture exhaust2.png 2d
		    }
        } 
    }
}

material TailMaterial
{
    technique
    {
        pass
        {
			// Blending settings
		    separate_scene_blend src_alpha one src_alpha one_minus_src_alpha
			separate_scene_blend_op add max
			depth_write off

            vertex_program_ref particle_shader3/vs
            {
            }
			geometry_program_ref particle_shader3/gs
            {
            }
            fragment_program_ref particle_shader3/fs
            {
            }

			texture_unit {
				texture_alias tex_samp
			    texture exhaust2.png 2d
		    }
        } 
    }
}

material TailMaterial2
{
    technique
    {
        pass
        {
			// Blending settings
		    separate_scene_blend src_alpha one src_alpha one_minus_src_alpha
			separate_scene_blend_op add max
			depth_write off

            vertex_program_ref particle_shader4/vs
            {
            }
			geometry_program_ref particle_shader3/gs
            {
            }
            fragment_program_ref particle_shader3/fs
            {
            }

			texture_unit {
				texture_alias tex_samp
			    texture exhaust2.png 2d
		    }
        } 
    }
}

